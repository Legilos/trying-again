package views;

import java.awt.Color;
import java.awt.event.ActionListener;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;

/**
 * @author Robert Kline
 */
public class SubstringSearchFrame extends javax.swing.JFrame {
  /**
   * Set the text content of the target textarea
   * @param text 
   */
  public void setTargetText(String text) {
    target.setText(text);
    target.setCaretPosition(0);
  }
  /**
   * Retrieve text content of target textarea
   * @return text content
   */
  public String getTargetText() {
    return target.getText();
  }
  
  /**
   * Retrieve text content of search textfield
   * @return text content
   */
  public String getSearchText() {
    return search.getText();
  }
  
  /**
   * add listener to find button
   * @param listener 
   */
  public void addFindActionListener(ActionListener listener) {
    find.addActionListener(listener);
  }

  /**
   * add listener to reset button
   * @param listener 
   */
  public void addResetActionListener(ActionListener listener) {
    reset.addActionListener(listener);
  }
  
  /**
   * set caretPosition for target textarea
   */
  public void setTargetCaretPosition(int pos) {
    target.setCaretPosition(pos);
  }
  
  /**
   * color used to highlight
   */
  private final Color highlightColor = Color.decode("#66ffcc");
  
  /**
   * GUI object which can "paint" a textarea segment with a given color
   */
  private final Highlighter.HighlightPainter myPainter 
          = new DefaultHighlighter.DefaultHighlightPainter(highlightColor);
  
  /**
   * paint the target text area from start to end using myPainter
   * @param start: paint starts at this index
   * @param end: paint ends before thing index
   * @throws BadLocationException 
   */
  public void setHighlights(int start, int end) throws BadLocationException  {
    Highlighter highlighter = target.getHighlighter();
    highlighter.addHighlight(start, end, myPainter);
    target.setCaretPosition(start);
  }

  /**
   * remove all highlight pating of the target textarea
   */
  public void clearHighlights() {
    target.getHighlighter().removeAllHighlights();
  }

  /**
   * Creates new form TheFrame
   */
  public SubstringSearchFrame() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane2 = new javax.swing.JScrollPane();
    target = new javax.swing.JTextArea();
    jPanel1 = new javax.swing.JPanel();
    find = new javax.swing.JButton();
    search = new javax.swing.JTextField();
    reset = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    target.setColumns(20);
    target.setFont(new java.awt.Font("Courier", 0, 18)); // NOI18N
    target.setRows(5);
    jScrollPane2.setViewportView(target);

    getContentPane().add(jScrollPane2, java.awt.BorderLayout.CENTER);

    find.setText("Find");

    reset.setText("Reset");

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(find)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(reset)
        .addContainerGap(127, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(find)
          .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(reset))
        .addContainerGap(15, Short.MAX_VALUE))
    );

    getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton find;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JButton reset;
  private javax.swing.JTextField search;
  private javax.swing.JTextArea target;
  // End of variables declaration//GEN-END:variables
}
